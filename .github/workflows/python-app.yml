name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: my_password
          POSTGRES_DB: mydatabase
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.12"
        auto-update-conda: true
        activate-environment: test-environment
        environment-file: install_environment/environment.yml
    - name: Install dependencies
      run: |
        conda env update --file install_environment/environment.yml --name test-environment

    - name: Get latest commit SHA of pdf2htmlEX
      id: sha-pdf2htmlEX
      run: echo "::set-output name=commit_sha::$(gh api repos/telmop/pdf2htmlEX/commits --jq '.[0].sha')"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Cache dependencies pdf2htmlEX
      id: cache-pdf2htmlEX
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pdf2htmlEX
        key: ${{ runner.os }}-cache-${{ steps.sha-pdf2htmlEX.outputs.commit_sha }}
  
    - name: Clone pdf2htmlEX repository if cache miss
      if: steps.cache-pdf2htmlEX.outputs.cache-hit != 'true'
      run: |
        CACHE_DIR="/home/runner/.cache"
        git clone https://github.com/telmop/pdf2htmlEX.git $CACHE_DIR/pdf2htmlEX
        cd $CACHE_DIR/pdf2htmlEX
        ./buildScripts/buildInstallLocallyApt
        
    - name: Install pdf2htmlEX if cache hit
      if: steps.cache-pdf2htmlEX.outputs.cache-hit == 'true'
      run: |
        cd /home/runner/.cache/pdf2htmlEX
        export PDF2HTMLEX_PREFIX=/usr/local
        ./buildScripts/installPdf2htmlEX
    - name: Test pdf2htmlEX installation
      run: pdf2htmlEX -v
  
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        conda run -n test-environment flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=$TEMP_DIR
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        conda run -n test-environment flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=$TEMP_DIR
    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    - name: Test with pytest
      env:
        PYTHONPATH: src
      run: |
        conda run -n test-environment pytest
